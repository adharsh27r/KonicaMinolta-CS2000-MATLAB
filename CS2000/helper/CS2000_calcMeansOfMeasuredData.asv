function meansOfMeasurement = CS2000_calcMeansOfMeasuredData(measurements)


spectralData = zeros(1,401);
colorimetricData = zeros(24);
colNames = fieldnames(measurements{1,1}.colorimetricData);

% colorimetricData.Le = 0;
% colorimetricData.Lv = 0;
% colorimetricData.X = 0;
% colorimetricData.Y = 0;
% colorimetricData.Z = 0;
% colorimetricData.x = 0;
% colorimetricData.y = 0;
% colorimetricData.u_ = 0;
% colorimetricData.v_ = 0;
% colorimetricData.T = 0;
% colorimetricData.delta_uv = 0;
% colorimetricData.lambda_d = 0;
% colorimetricData.Pe = 0;
% colorimetricData.X10 = 0;
% colorimetricData.Y10 = 0;
% colorimetricData.Z10 = 0;
% colorimetricData.x10 = 0;
% colorimetricData.y10 = 0;
% colorimetricData.T10 = 0;
% colorimetricData.delta_uv10 = 0;
% colorimetricData.lambda_d10 = 0;
% colorimetricData.Pe10 = 0;

i = 1 : 401;
l = length(measurements);
k = 1 : 24;

for j = 1 : l
    % spectral data
    spectralData(1,i) = spectralData(1,i) + ...
        measurements{j,1}.spectralData(i);
    % colorimetric data
    colorimetricData(k) = colorimetricData(k) + getfield(measurements{j,1}.colorimetricData, colNames{k});
%     colorimetricData.Le = colorimetricData.Le + ...
%         measurements{j,1}.colorimetricData.Le;
%     colorimetricData.Lv = colorimetricData.Lv + ...
%         measurements{j,1}.colorimetricData.Lv;
%     colorimetricData.X = colorimetricData.X + ...
%         measurements{j,1}.colorimetricData.X;
%     colorimetricData.Y = colorimetricData.Y + ...
%         measurements{j,1}.colorimetricData.Y;
%     colorimetricData.Z = colorimetricData.Z + ...
%         measurements{j,1}.colorimetricData.Z;
%     colorimetricData.x = colorimetricData.x + ...
%         measurements{j,1}.colorimetricData.x;
%     colorimetricData.y = colorimetricData.y + ...
%         measurements{j,1}.colorimetricData.y;
%     colorimetricData.u_ = colorimetricData.u_ + ...
%         measurements{j,1}.colorimetricData.u_;
%     colorimetricData.v_ = colorimetricData.v_ + ...
%         measurements{j,1}.colorimetricData.v_;
%     colorimetricData.T = colorimetricData.T + ...
%         measurements{j,1}.colorimetricData.T;
%     colorimetricData.delta_uv = colorimetricData.delta_uv + ...
%         measurements{j,1}.colorimetricData.delta_uv;
%     colorimetricData.lambda_d = colorimetricData.lambda_d + ...
%         measurements{j,1}.colorimetricData.lambda_d;
%     colorimetricData.Pe = colorimetricData.Pe + ...
%         measurements{j,1}.colorimetricData.Pe;
%     colorimetricData.X10 = colorimetricData.X10 + ...
%         measurements{j,1}.colorimetricData.X10;
%     colorimetricData.Y10 = colorimetricData.Y10 + ...
%         measurements{j,1}.colorimetricData.Y10;
%     colorimetricData.Z10 = colorimetricData.Z10 + ...
%         measurements{j,1}.colorimetricData.Z10;
%     colorimetricData.x10 = colorimetricData.x10 + ...
%         measurements{j,1}.colorimetricData.x10;
%     colorimetricData.y10 = colorimetricData.y10 + ...
%         measurements{j,1}.colorimetricData.y10;
%     colorimetricData.T10 = colorimetricData.T10 + ...
%         measurements{j,1}.colorimetricData.T10;
%     colorimetricData.delta_uv10 = colorimetricData.delta_uv10 + ...
%         measurements{j,1}.colorimetricData.delta_uv10;
%     colorimetricData.lambda_d10 = colorimetricData.lambda_d10 + ...
%         measurements{j,1}.colorimetricData.lambda_d10;
%     colorimetricData.Pe10 = colorimetricData.Pe10 + ...
%         measurements{j,1}.colorimetricData.Pe10;
end

spectralData(1,i) = spectralData(1,i) / l;
colorimetricData(k) = colorimetricData(k) / l;

% colorimetricData.Le = colorimetricData.Le / l;
% colorimetricData.Lv = colorimetricData.Lv / l;
% colorimetricData.X = colorimetricData.X / l;
% colorimetricData.Y = colorimetricData.Y / l;
% colorimetricData.Z = colorimetricData.Z / l;
% colorimetricData.x = colorimetricData.x / l;
% colorimetricData.y = colorimetricData.y / l;
% colorimetricData.u_ = colorimetricData.u_ / l;
% colorimetricData.v_ = colorimetricData.v_ / l;
% colorimetricData.T = colorimetricData.T / l;
% colorimetricData.delta_uv = colorimetricData.delta_uv / l;
% colorimetricData.lambda_d = colorimetricData.lambda_d / l;
% colorimetricData.Pe = colorimetricData.Pe / l;
% colorimetricData.X10 = colorimetricData.X10 / l;
% colorimetricData.Y10 = colorimetricData.Y10 / l;
% colorimetricData.Z10 = colorimetricData.Z10 / l;
% colorimetricData.x10 = colorimetricData.x10 / l;
% colorimetricData.y10 = colorimetricData.y10 / l;
% colorimetricData.T10 = colorimetricData.T10 / l;
% colorimetricData.delta_uv10 = colorimetricData.delta_uv10 / l;
% colorimetricData.lambda_d10 = colorimetricData.lambda_d10 / l;
% colorimetricData.Pe10 = colorimetricData.Pe10 / l;






% create CS2000Measurement object
timeStamp = measurements{l,1}.timeStamp;
meansOfMeasurement = CS2000Measurement(timeStamp,spectralData,...
    colorimetricData);
colorimetricNames = properties(measuredData.colorimetricData);

end